package com.k53ca.lotterylive.data;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;
import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.DaoConfig;
import de.greenrobot.dao.Property;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/**
 * DAO for table KET_QUA_XO_SO.
 */
public class KetQuaXoSoDao extends AbstractDao<KetQuaXoSo, Long> {

	public static final String TABLENAME = "KET_QUA_XO_SO";

	public static class Properties {
		public final static Property Id = new Property(0, Long.class, "id",
				true, "_id");
		public final static Property ServiceId = new Property(1, Long.class,
				"serviceId", false, "SERVICE_ID");
		public final static Property Vung = new Property(2, Integer.class,
				"vung", false, "VUNG");
		public final static Property Date = new Property(3, String.class,
				"date", false, "DATE");
		public final static Property GiaiDacBiet = new Property(4,
				String.class, "giaiDacBiet", false, "GIAI_DAC_BIET");
		public final static Property GiaiNhat = new Property(5, String.class,
				"giaiNhat", false, "GIAI_NHAT");
		public final static Property GiaiNhi = new Property(6, String.class,
				"giaiNhi", false, "GIAI_NHI");
		public final static Property GiaiBa = new Property(7, String.class,
				"giaiBa", false, "GIAI_BA");
		public final static Property GiaiTu = new Property(8, String.class,
				"giaiTu", false, "GIAI_TU");
		public final static Property GiaiNam = new Property(9, String.class,
				"giaiNam", false, "GIAI_NAM");
		public final static Property GiaiSau = new Property(10, String.class,
				"giaiSau", false, "GIAI_SAU");
		public final static Property GiaiBay = new Property(11, String.class,
				"giaiBay", false, "GIAI_BAY");
		public final static Property GiaiTam = new Property(12, String.class,
				"giaiTam", false, "GIAI_TAM");
	};

	public KetQuaXoSoDao(DaoConfig config) {
		super(config);
	}

	public KetQuaXoSoDao(DaoConfig config, DaoSession daoSession) {
		super(config, daoSession);
	}

	/** Creates the underlying database table. */
	public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
		String sql = "CREATE TABLE " + (ifNotExists ? "IF NOT EXISTS " : "")
				+ "'KET_QUA_XO_SO' (" + //
				"'_id' INTEGER PRIMARY KEY ," + // 0: id
				"'SERVICE_ID' INTEGER," + // 1: serviceId
				"'VUNG' INTEGER," + // 2: vung
				"'DATE' TEXT," + // 3: date
				"'GIAI_DAC_BIET' TEXT," + // 4: giaiDacBiet
				"'GIAI_NHAT' TEXT," + // 5: giaiNhat
				"'GIAI_NHI' TEXT," + // 6: giaiNhi
				"'GIAI_BA' TEXT," + // 7: giaiBa
				"'GIAI_TU' TEXT," + // 8: giaiTu
				"'GIAI_NAM' TEXT," + // 9: giaiNam
				"'GIAI_SAU' TEXT," + // 10: giaiSau
				"'GIAI_BAY' TEXT," + // 11: giaiBay
				"'GIAI_TAM' TEXT);"; // 12: giaiTam
		db.execSQL(sql);
	}

	/** Drops the underlying database table. */
	public static void dropTable(SQLiteDatabase db, boolean ifExists) {
		String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "")
				+ "'KET_QUA_XO_SO'";
		db.execSQL(sql);
	}

	/** @inheritdoc */
	@Override
	protected void bindValues(SQLiteStatement stmt, KetQuaXoSo entity) {
		stmt.clearBindings();

		Long id = entity.getId();
		if (id != null) {
			stmt.bindLong(1, id);
		}

		Long serviceId = entity.getServiceId();
		if (serviceId != null) {
			stmt.bindLong(2, serviceId);
		}

		Integer vung = entity.getVung();
		if (vung != null) {
			stmt.bindLong(3, vung);
		}

		String date = entity.getDate();
		if (date != null) {
			stmt.bindString(4, date);
		}

		String giaiDacBiet = entity.getGiaiDacBiet();
		if (giaiDacBiet != null) {
			stmt.bindString(5, giaiDacBiet);
		}

		String giaiNhat = entity.getGiaiNhat();
		if (giaiNhat != null) {
			stmt.bindString(6, giaiNhat);
		}

		String giaiNhi = entity.getGiaiNhi();
		if (giaiNhi != null) {
			stmt.bindString(7, giaiNhi);
		}

		String giaiBa = entity.getGiaiBa();
		if (giaiBa != null) {
			stmt.bindString(8, giaiBa);
		}

		String giaiTu = entity.getGiaiTu();
		if (giaiTu != null) {
			stmt.bindString(9, giaiTu);
		}

		String giaiNam = entity.getGiaiNam();
		if (giaiNam != null) {
			stmt.bindString(10, giaiNam);
		}

		String giaiSau = entity.getGiaiSau();
		if (giaiSau != null) {
			stmt.bindString(11, giaiSau);
		}

		String giaiBay = entity.getGiaiBay();
		if (giaiBay != null) {
			stmt.bindString(12, giaiBay);
		}

		String giaiTam = entity.getGiaiTam();
		if (giaiTam != null) {
			stmt.bindString(13, giaiTam);
		}
	}

	/** @inheritdoc */
	@Override
	public Long readKey(Cursor cursor, int offset) {
		return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
	}

	/** @inheritdoc */
	@Override
	public KetQuaXoSo readEntity(Cursor cursor, int offset) {
		KetQuaXoSo entity = new KetQuaXoSo(
				//
				cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
				cursor.isNull(offset + 1) ? null : cursor.getLong(offset + 1), // serviceId
				cursor.isNull(offset + 2) ? null : cursor.getInt(offset + 2), // vung
				cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // date
				cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // giaiDacBiet
				cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // giaiNhat
				cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // giaiNhi
				cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // giaiBa
				cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // giaiTu
				cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // giaiNam
				cursor.isNull(offset + 10) ? null : cursor
						.getString(offset + 10), // giaiSau
				cursor.isNull(offset + 11) ? null : cursor
						.getString(offset + 11), // giaiBay
				cursor.isNull(offset + 12) ? null : cursor
						.getString(offset + 12) // giaiTam
		);
		return entity;
	}

	/** @inheritdoc */
	@Override
	public void readEntity(Cursor cursor, KetQuaXoSo entity, int offset) {
		entity.setId(cursor.isNull(offset + 0) ? null : cursor
				.getLong(offset + 0));
		entity.setServiceId(cursor.isNull(offset + 1) ? null : cursor
				.getLong(offset + 1));
		entity.setVung(cursor.isNull(offset + 2) ? null : cursor
				.getInt(offset + 2));
		entity.setDate(cursor.isNull(offset + 3) ? null : cursor
				.getString(offset + 3));
		entity.setGiaiDacBiet(cursor.isNull(offset + 4) ? null : cursor
				.getString(offset + 4));
		entity.setGiaiNhat(cursor.isNull(offset + 5) ? null : cursor
				.getString(offset + 5));
		entity.setGiaiNhi(cursor.isNull(offset + 6) ? null : cursor
				.getString(offset + 6));
		entity.setGiaiBa(cursor.isNull(offset + 7) ? null : cursor
				.getString(offset + 7));
		entity.setGiaiTu(cursor.isNull(offset + 8) ? null : cursor
				.getString(offset + 8));
		entity.setGiaiNam(cursor.isNull(offset + 9) ? null : cursor
				.getString(offset + 9));
		entity.setGiaiSau(cursor.isNull(offset + 10) ? null : cursor
				.getString(offset + 10));
		entity.setGiaiBay(cursor.isNull(offset + 11) ? null : cursor
				.getString(offset + 11));
		entity.setGiaiTam(cursor.isNull(offset + 12) ? null : cursor
				.getString(offset + 12));
	}

	@Override
	protected Long updateKeyAfterInsert(KetQuaXoSo entity, long rowId) {
		entity.setId(rowId);
		return rowId;
	}

	/** @inheritdoc */
	@Override
	public Long getKey(KetQuaXoSo entity) {
		if (entity != null) {
			return entity.getId();
		} else {
			return null;
		}
	}

	/** @inheritdoc */
	@Override
	protected boolean isEntityUpdateable() {
		return true;
	}

}
